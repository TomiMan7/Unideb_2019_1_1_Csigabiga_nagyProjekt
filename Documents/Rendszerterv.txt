Rendszerterv
The Snail Sale
-A rendszer célja
	A The Snail Sale egy olyan desktop applikáció, amivel a felhasználók
könnyen, és gyorsan tudnak vásárolni.
	A rendszer célja egy olyan applikáció létrehozása, ami egy online
adatbázishoz csatlakozva, szofisztikált keresõrendszert alkalmazva segíti
 a felhasználóit, a megfelelõ termékek megvásárlásában.
	A kívánt termék megkeresése után, a termékrõl a program megjeleníti a
különbözõ, az adatbázisban tárolt adatokat a felhasználó számára. Ezeket
 az adatokat a termékrõl az ablak közepén elhelyezett, információs 
részlegben tekintheti meg a felhasználó.
	A kiválaszott, megvételre szánt termékeket a kosárhoz adhatja user, amit
bármikor megtekinthet. Miután kiválasztotta a megvásárolandó terméket, a
rendszer összegyûjti és tematikusan bemutatja, hogy mely termékeket
választotta ki a felhasználó. Ekkor még lehetõsége van a felhasználónak,
 arra, hogy az esetlegesen nem kívánt termékeket kivegye a kosarából a
megfelelõ gombra kattintva.
	Ezután a program folytatva a vásárlás folyamatát, megkéri a felhasználót,
hogy írja be a vásárláshoz szükséges személyes adatokat. A megfelelõ
adatok beírása után, a felhasználót, még egy, utolsó adategyeztetés
választja el a sikeres vásárlástól. Miután meggyõzõdött arról, hogy az
adatait helyesen írta be, és a megfelelõ termékeket választotta ki, 
konfirmálja a vásárlás helyességét. Ezután a program generál egy úgynevezett
"tracking number" amivel a vásárlást tudja követni, illetve a megfelelõ
adatokat rögzíti az adatbázis megfelelõ táblájába.
	A vásárlás befejezése után a program a keresõ oldalra irányítja a
felhasználót, további vásárlásra adva lehetõséget.
	A rendszernek nem célja, a felhasználók által eladni kívánt termékek
felvétele az adatbázisba, így arra nem is kínál lehetõséget a program.
Nem célja a termékek szöveges értékelése se, így csak egy 1-tõl 5-ig,
egész számokat tartalmazó skálán értékelhetik a regisztrált felhasználók a termékeket.


-Üzleti folyamatok modellje

A szoftver abból a célból készül, hogy a felhasználók (vásárlók) könnyen
elérhessék a számukra szükséges termékeket, a lehetõ leggyorsabb és leg-
kényelmesebb módon. Maga az üzleti folyamat része a szoftver használata.
Ehhez a szükséges szereplõk a felhasználók, és az adminisztrátorok, 
valamint egy megfelelõen mûködõ és kezelhetõ adatbázis, a felhasználók
fiókjaival, valamint a termékek listájával.
A programot a felhasznáó eléri, majd elindítja, ezzel indul a folyamat.
Ha a felhasználó elõször akarja használni a szoftvert, akkor regisztrálnia
kell. A megadott adatok az adatbázisban tárolódni fognak, ezért a
továbbiakban elegendõ bejelentkeznie a korábban megadott adatokkal.
A bejelentkezés egy adatbázisban való keresés segítségével végzi el a program.
A megfelelõ felhasználó és jelszó kombinációjának beírásával ez a
folyamat sikeres, így eléri a további folyamatokat, amik a vásárláshoz
szükségesek. A másik üzleti szereplõ az adminisztrátor.
Ahhoz, hogy a vásárló böngészhessen a termékek között, a programot adatokkal
kell feltölteni, amit a felhasználó olvashat és láthat. Az adatbázis feltöltése
és módosítása az adminisztrátor dolga. Mivel a termékek száma és elérhetõsége
változó, így ezt fontos karbantartani. 
Ezután a felhasználó megtekintheti a feltöltött termékeket, kiválaszthatja,
hogy számára melyik szükséges, majd megvásárolhatja. A termék kiválasztása
után a felhasználó kitölt egy szállítással és fizetéssel kapcsolatos oldalt,
majd a vásárlásra kattint. Az igény pedig az adminisztrátorhoz érkezik be,
ami a felhasznló által kitöltött adatokkal és a kiválasztott termékekkel együtt
érkezik be. Az entitás maga a SnailSale vásárlásra kitalált program, a benne
felsorakoztatott termékekkel.
Összefoglaló: Üzleti szereplõk: felhasználó, adminisztrátor, (adatbázis)
	Üzleti folyamatok: bejelentkezés, regisztráció -> azonosítás
			adatbázis feltöltése -> termékek böngészése, vásárlás
			vásárlás -> beérkezik az igény a vásárlásról
	Üzleti entitás: SnailSale és annak termékei
Összefoglaló képformájában: lásd: uzletifolyamatok.jpg

-Követelmények 


Funkcionális követelményekhez tartozik az egyszerûen használható, felhasználóbarát
felület, ahol az elemek érthetõen vannak megfogalmazva és egyértelmû az elemek
funkciója. A program gyorsan letölthetõ, könnyen elérhetõ és internet kapcsolat
mellett jól mûködik. A folyamat és a mûködés célja az, hogy a felhasználó hozzá-
juthasson a kívánt termékhez. A termékek listája és az adatbázis folyamatosan 
frissülõ és mindig aktuális. Az alkalmazás mindig elérhetõ legyen (a karbantartás
idõszaka képezhet kivételt), valamint a használata gördülékeny és gyors.
A regisztrációval mindig tudjon a felhasználó profilt létrehozni, de ne lehessen
két egyforma felhasználó nevû vásárló. A bejelentkezés helyes megadott adatok
esetén legyen sikeres. A szoftver felismerje, ha még nem regisztrált felhasználó 
próbálja használni és bejelentkezni. A felasználó nevet és jelszót megfelelõen
és törvényeknek megfelelõen kell kezelni. Ezt a felhasználók és az ott dolgozók
nem tekinthetik meg adatvédelmi okokból.
Bejelentkezett felhasználó esetén a termékek kosárba tehetõk és megvásárolhatóak
A személyes és szállításhoz szükséges információkkal kitöltött oldal továbbításra 
kerül a kosárba rakott termékekkel együtt. Így az adminisztrátor segítségével 
továbbításra kerül mik a szállítandó termékek és hova kell szállítani, valamint
komplikáció esetén hol lehet értesíteni a felhasználót.
Nem funkcionális követelmények szempontjából a középpontban az egyszerûen kezelhetõ
felület áll, hogy a felhasználók elõszeretettel használhassák a szoftvert. A gombok
egyértelmûen használhatóak, és elérhetõek az elhelyezésük szempontjából is. 
Az elrendezés is segíti a vásárlót a gördülékeny használathoz. A szövegek és a
különbözõ karakterek jól olvashatóak, eltérnek a háttér színétõl, és egyszerûen
észrevehetõek. Az alkalmazásban nem megengedett a sértõ tartalom megjelenítése,
szabadon kitölthetõ szöveges mezõket a felhasználóknak is a kért tartalomnak
megfelelõen kell kitölteni. Nem megfelelõ használat esetén az adminisztrátoroknak,
illetve a készítõknek lehetõségük van az adott felasználót eltávolítani az adatbázisból.

-Funkcionális terv 

A feladat egy számítógépen futó The Snail Sale nevû program megtervezése.
A program kérje le egy "csiga" nevû adatbázisból a keresési és kiválasztási 
feltételeknek megfelelõ terméket, mikor a felhasználó éppen a szoftvert használja.
Továbbá a feladatai között van az értékelés, pl. egy felhasználó megrendeli 
a számára megfelelõ termékeket, és kiszállítás után van lehetõsége értékelni
a csomagot. 1-tõl 5-ig tudnak értékelni. Alalpvetõ funkciói közé tartozik a 
keresés különbözõ szempontok szerint (ár szerint, növekvõ-csökkenõ sorrendben stb.)
Egy vásárlás ezzel a szoftverrel : A felhasználó bejelentkezés vagy regisztráció után 
megkeresi a számára fontos termékeket, elolvashatja az adatait majd berakhatja a kosárba. 
A korárba maximum 3 terméket rakhat, ennyit lehet õsszesen egyszerre vásárolni. 
A kosárban is megtekintheti a megrendelni kívánt termékeket az adataikkal egyutt. 
Többszörörs megerõsítés és adategyeztetés után lehet megrendelni, majd 
kiszállítás után véleményezni és értékelni.A rendszert három szereplõre 
lehet felbontani, a megrendelõre, felhasználókra és a programozókra. 
A fejlesztõk megtervezik és implementálják a megrendelõ igényeit. 
Majd a továbbiakban a felhasználók igényei és észrevételei szerint fogják a 
programozók fejleszteni a felületet. A felület egyszerû , mégis több egyszerû menü 
és gomb van a programban. 

-Fizikai környezet

Az applikációt a Java programozási nyelvnek a használatával fogjuk
elkészíteni.  A 11-es verziót használva, de elõre láthatólag 100%-ban
csak a 8-as verzió funkcióit felhasználva, azaz teljes mértékben
kompatibilis lesz a 8-as verzióval. 
	A Java programozási nyelvnek köszönhetõen, így a program, használható
lesz mind Windows, illetve Mac gépeken is.
	A programnak szüksége lesz internet kapcsolatra, az online adatbázis
használatából kifolyólag. Az internetkapcsolat sebességének minimálisan
el kell érnie az 1Mb/s sebességet, élvezhetõ felhasználás érdekében.
	A java nyelv sajátosságaiból kifolyólag, és a gördülékeny felhasználás
érdekében, az éppen szóban forgó operációs rendszer, valamint a
feljesztõkörnyezet, és egyéb segédprogramokhoz (lsd. késõbb) szükséges 
minimális rendszerkövetelményein felül ajálnlatos egy 2 magos processzor,
és legalább 1Gb RAM használata.
	Fejlesztõi környezetnek az IntelliJ IDE-t fogjuk használni, a minél
könnyebb fejlesztés érdekében.
	Az online adatbázis kezeléséhez pedig phpMyadmint.
	Az adatbázis szerverhez például wamp vagy xamp szerver is használható. 

-Absztrakt domain modell 

Minden oldalról közvetetten vagy közvetlenül vissza lehet navigálni a fõoldalra.
Az alkalmazáson belül az oldalak és panelek megfelelõen összekapcsolódnak, és
gördülékenyen átvált egyik oldalról a másikra. Ezek fõként gombok segítségével 
valósulnak meg. Például a bejelentkezés oldal a fõoldalról elérhetõ egy be/kijelentkezés
gomb segítségével, errõl az oldalról pedig tovább mozoghatunk a regisztrációs panelra.
A szoftver adatbázisból dolgozik, innen jelenítni meg a termékeket és a hozzá tartozó
adatokat. Majd a kiválasztott termékeket átvihetjük a kosár oldalára. Ezután a 
véglegesítés során a személyes infókat is fel kell vinnünk, és ezeket az adatokat 
a termékekkel együtt kell eljuttatnunk az ezzel foglalkozó munkatárshoz, aki felveszi
a rendeléseket. Ez adatbázis segítségével fog történni, így az adminisztrátorként dolgozó
munkatárs is könnyedén áttekintheti melyik termékbõl és kinek kell kiküldeni.

-Architekturális terv 

Az alkalmazás alapvetõen egy fõoldalból, bejelentkezõ, regisztrációs oldalból, a kosár,
a kosár tartalmának véglegesítése, a vásárlás véglegesítése és az ezekhez szüséges
személyes infók panelbõl áll. A szoftver struktúráját tekintve nem funkcionális elemek
módosítására folyamatosan van lehetõség. A vágyálom rendszerben korábban felvetett
ötletek megvalósítása a továbbiakban van mód és lehetõség, ha az igényt megkapjuk.
A változtatások, különbözõ módosítások a felületen várhatóak. A változtatásokon kívül
a program bõvíthetõ elemekkel. 
A képernyõtervek alapján készülne el a program.
A fõoldal a tervek szerint balról jobbra egy keresõsávból, és egy sorrendet módosító
részbõl áll, amit egy keresés gombbal tuunk mûködtetni. Az olddal közeépsõ részén
találhatóak a termékek az adataikkal, felette a rendezés feltétele, és mellette a kosár
gomb, amivel a kosár oldalára navigálhat a felhasználó. A képernyõ közepén, ahol az adott
termék látható, megjelenik egy kosárba gomb is, amivel kosárba lehet helyezni az éppen
megtekintett terméket. A termékeket az elõzõ és a következõ gombokkal lapozhatjuk. 
A fõoldal jobb oldalán egy be/kijelentkezés gomb található, alatta a termék értékelése
rész, és egy vásárláshoz gomb, ami a vásárláshoz irányít tovább.
A keresés gombbal szükíthetjük a megjelenõ termékek listáját és ezeket sorrendbe is
állíthatjuk. (ugyanúgy a fõoldalon maradunk) 
A kosár gomb átirányít minket a kosár oldalra, ahol továbbugorhatunk a vásárlás oldalra
egy gombbal, vagy vissza a fõoldalra. A kosárba rakott termékek kilistázódnak, amiket 
az eltávolítás gombbal eltüntethetünk a listából. 
A bejelentkezés oldalra ezzel a gombbal irányíthatjuk át magunkat. Itt csak bejelentkezésre
vagy továbbugrani a regisztrációhoz van lehetõség. Regisztrációnál felhasználónevet,
email címet és jelszót kérünk be. Ha a mése gombra kattintunk, visszakerülünk a fõoldalra.
Majd ha a vásárlás gombra kattintunk ki kell töltenünk a személyes információkkal egy 
új lapot. Ezzel továbbugrunk a véglegesítésshez, ahol a kosárban lévõ elemeket és a 
személyes infókat még egyszer áttekintheti a vásárló. A véglegesítés gombbal leadja a
rendelést.
A rendszer bõvíthatõ további lapokkal. A meglévõ lapokon belül bõvíthetõ funkcionális és
nem funkcionális elemekkel. Több helyen megjeleíthetõ kép vagy a logó, amennyiben újabb
igény érkezik be ezzel kapcsolatban. 

-Adatbázis terv
	Programunk a tárolandó adatokat, online adatbázisban fogja tárolni.
Online felületnek a phpmyadmint fogjuk használni.  Tesztelési fázisban,
egyelõre mindenki offline, saját gépén elérhetõ adatbázist használjon,
amit egy központi adatbázisból fogunk exportálni, így elkerülendõ
bárminemû, nem kívánt módosítás a központi adatbázisban.
	Az adatbázis felépítésénél ügyeljünk a megrendelõ kérésére. Azaz legyen
elkülönítve a regisztrált felhasználók, a vásárlások, illetve az áruk
adatai, egy-egy különálló táblában. 
	A táblák a következõek legyenek:
-"users", 
-"goods",
-"orders".

A "users" táblában fogjuk tárolni a regisztrált felhasználók adatait.
Tárolandó adatok: felhasználó neve, e-mail címe, és jelszava titkosítva. 
	A tábla oszlopai: 
-"username"-felhasználó név, elsõdleges kulcs, külsõ kulcs az "order"
táblához, egyedi, nem lehet üres, varchar2, 64 karakter hosszú.
-"email"-e-mail cím, varchar2, egyedi, nem lehet üres, 64 karakter hosszú.
-"password"-jelszó, nem lehet üres, varchar2 64 karakter hosszú, MD5
titkosított.

A "goods" táblában fogjuk tárolni, az áruk adatait.
Tárolandó adatok:elérhetõ mennyiség, név, ár, cikkszám, értékelés.
-"quantity"-elérhetõ mennyiség, number, 4 karakter hosszú, nem lehet üres.
-"name"-név, egyedi, nem lehet üres, varchar2 32 karakter hosszú.
-"price"-ár, nem lehet üres, number 6 karakter hosszú.
-"number"-cikkszám, elsõdleges kulcs, egyedi, nem lehet üres, varchar2
64 karakter hosszú.
-"rating"-értékelés, number 1 karakter hosszú.

Az "orders" táblában fogjuk tárolni a leadott rendeléseket.
Tárolandó adatok: megrendelõ neve, felhasználó neve, telefonszáma,
szállítási címe, e-mail címe, fizetési módszere, szállítási módszer,
rendelt áruk, rendelés száma.
-"name"-név, nem lehet üres, varhcar2, 64 karakter hosszú.
-"username"-felhasználó neve, külõs kulcs a "users" táblához, nem lehet
üres, varchar2 64 karakter hosszú.
-"phone"-telefonszám, number 11 karakter hosszú, nem lehet üres.
-"address"-szállítási cím, varchar2 64 karakter, nem lehet üres.
-"email"-e-mail, varchar2 64 karakter hosszú, nem lehet üres.
-"payment_method"-fizetési módszer, nem lehet üres, varchar2 32 karakter
hosszú.
-"shipment_method"-szállítási módszer, nem lehet üres, varchar2 32
karakter hosszú.
-"goods"-rendelt áruk, nem lehet üres, number 324 karakter hosszú. Az áruk
cikkszámait tárolja ","-vel elválasztva, maximum 5 áru tárolására alkalmas.
-"tracking_number"-rendelés száma, egyedi, elsõdleges kulcs, nem lehet
üres, number 6karakter hosszú.

Az adatbázisról megtalálható egy diagram az alábbi címen:
https://raw.githubusercontent.com/TomiMan7/Unideb_2019_1_1_Csigabiga_nagyProjekt/master/Documents/Database%20diagram/database.JPG 

-Implementációs terv
A fejlesztés során, objektum orientált programozással fogjuk elkészíteni
 a The Snail Sale programot. Ehhez Java programozási nyelvet fogunk 
használni, a 11-es verziót. 
	A grafikus felületet JavaFx segítségével valósítjuk meg.
	A program osztályait 4 csoportba lehet besorolni.
-A grafikus felületekért felelõs osztályok
-A grafikus felületek inputját lekezelõ függvényeket tartalmazó osztályok
-Az adatbázist használó és kezelõ függvények osztálya
-A main függvény szerepét játszó indító osztály
	Az egyes csoportba tartozó osztályok és megnevezéseik:
-GUI osztályok:
		-login.java
		-registration.java
		-mainPage.java
		-cart.java
		-cartOverview.java
		-personalInfo.java
		-orderConfirmation.java

-GUI input kezelõ osztályok:
		-loginController.java
		-registrationController.java
		-mainPageController.java
		-cartController.java
		-cartOverviewController.java
		-personalInfoController.java
		-orderConfirmationController.java

-Az adatbázist kezelõ osztályok:
		-database.java

Az indító osztály:
		-launcher.java
	Az egyes osztályok és tartalmuk:
-login.java: Ebben az osztályban kerül megvalósításra a belépés képernyõnek
a megírása.
Kérje be a program a belépéshez szükséges információkat a felhasználótól.
Sikeres bejelentkezés esetén a mainPage.java megfelelõen megváltoztatott
ablakát hozza fel.
A még nem regisztrált felhasználóknak adjon lehetõséget a regisztrációra
a registration.java-ban megírt ablak felhozásával.

-registration.java:Ebben az osztályban kerül megvalósításra a regisztráció
képernyõnek a megírása.
Kérje be a program a regisztrációhoz szükséges információkat a felhasználótól.
Sikeres regisztráció esetén a login.java ablakát hozza fel.

-mainPage.java:Ebben az osztályban kerül megvalósításra a böngészés
képernyõnek a megírása.  Továbbá, ez a fõképernyõ, ezt indítja a
launcher.java main függvénye.
Ezen a képernyõn helyezkedik el a kosár, a bejelentkezés, a vásárlás
ablakhoz vezetõ gomb is.

-cart.java:Ebben az osztályban kerül megvalósításra a kosár képernyõnek
a megírása.  Sorakoztassa fel a felhasználó által a kosárba tett termkékeket,
információval együtt.

-cartOverview.java:Ebben az osztályban kerül megvalósításra a vásárlás
elõtt a kosár tartalmát felmutató képernyõnek a megírása.
Tudjon a felhasználó törölni nem kívánt árucikkeket, vagy mennyiségeket.
A vásárlás folytatásához a megfelelõ gomb megnyomása után a personalInfo.java
osztályban megírt ablakot hozza fel.

-personalInfo.java:Ebben az osztályban kerül megvalósításra a vásárlásnál
a személyes információk bekérésének képernyõjének a megírása.

-orderConfirmation.java:Ebben az osztályban kerül megvalósításra a vásárlás
végleges visszaigazolásának képernyõjének a megírása.

-loginController.java: a login.java GUI osztályhoz tartozó függvényeket
tartalmazó osztály

-registrationController.java: a registration.java GUI osztályhoz tartozó
függvényeket tartalmazó osztály

-mainPageController.java: a mainPage.java GUI osztályhoz tartozó függvényeket
tartalmazó osztály

-cartController.java: a cart.java GUI osztályhoz tartozó függvényeket
tartalmazó osztály

-cartOverviewController.java: a cartOverview.java GUI osztályhoz tartozó
függvényeket tartalmazó osztály

-personalInfoController.java: a personalIno.java GUI osztályhoz tartozó
függvényeket tartalmazó osztály

-orderConfirmationController.java: a orderConfirmation.java GUI osztályhoz
tartozó függvényeket tartalmazó osztály

-launcher.java:Ebben az osztályban található a main függvény, ami
elindítja a mainPage.java start függvényet.

-database.java: Az adatbázist használó és kezelõ függvényeket tartalmazó
osztály 

-Tesztterv

A tesztelés során a teszt tárgya lehet a rendszer azon része, amelyet tesztelünk, 
ez lehet az egész rendszer is. A mi esetunkben teszteseteket fogunk megnézni, 
és manuálisan tesztelni, ezzel lefedve az egész rendszert. Tesztbázis azon  
dokumentumok  összessége,  amelyek  a  teszt  tárgyára  vonatkozó követelményeket
tartalmazzák: Követelmény specifiáció és funkcionális specifikáció. 
A tesztelés során ellenõrizzük, hogy a felhasználói felület megfelelõen betöltõdött,
a keresés, a gombok és a kattintható felületek megfelelõen mûködnek.
Ha a felület betöltõdött, akkor gombok(Kosár,Regisztráció,Belépés stb), 
keresés és egyéb kattintható felületet vizsgáljuk, megjelenik-e minden opció, 
amiket a fejlesztés során implementáltak. 
Az eddig elkészített program tesztesetei:
	A program megfelelõen, hibamentesen elindul, majd a felület betölt. 
	A felület a képernyõterv szerint jelenik meg, kivéve a Kosár(javítás alatt áll).
	Az elindítás utáni felületen több gomb és keresési mezõ is látható.
	A gombok kattinthatóak. A keresés maunális tesztelése még nem lehetséges, 
	mivel a program még nincs teljesen kész, fejlesztés alatt áll.
	A Kosát gombra kattintva behozza a kosár tartalmát(még üresen), ez még nincs tejesen kész.
	Innen visszalehet ugrani a fõ felületre, vagy pedig a pénztárhoz, de elõtte még
	felugrik egy ablak, a személyes információkért.
	A feladat egyik fõ része a regisztráció és a bejelentkezés.
	A Belépésre kattintva átvált a erre az oldalra és kér egy felhasználónevet, jelszót.
	Még nem lehet belépni, vagy beregisztrálni.
	Ha még nincs fiók akkor tovább kell lépni a regisztrációhoz.
	Itt majd meg kell adni felhasználónevet, email címet és jelszót, amikell késõbb majd be tudnak jelentkezni.
	Ezek a tesztesetek mûködõképesek, a gombok kattinthatóák, a program mostani állása szerint, 
	ha rányomunk egy adott gombra, akkor átvisz minket a megfelelõ felületre.
	A program hiányossága miatt a keresés, értékelés, belépés és regisztráció még nem 
	lehetséges, de ezt a késõbbiekben korrigaljuk, fejlesztés alatt van.
	A fenti tesztelések manuálisan történtek.

-Telepítési terv 

-Karbantartási terv 
